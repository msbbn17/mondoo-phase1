name: Mondoo Pipeline

on:
  release:
    types: [created]

jobs:
  semgrep:
    name: semgrep-oss/scan
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    steps:
      - uses: actions/checkout@v4
      - run: semgrep scan --config auto

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

  go-build:
    name: Build Binary
    runs-on: ubuntu-latest
    needs: [golangci, semgrep]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.3'
      - name: Build the binary
        run: go build -o mondoo-webserver ./main.go

  go-release-linux-amd64:
    name: Release linux/amd64
    runs-on: ubuntu-latest
    needs: [go-build]
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.CREATE_RELEASE_PAT }}
          goos: linux
          goarch: amd64

  trigger-docker-build:
    runs-on: ubuntu-latest
    needs: [go-release-linux-amd64]
    steps:
      - name: Trigger Docker Build in Target Repository
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE_PAT }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/msbbn17/mondoo-phase2/dispatches \
            -d '{"event_type": "trigger-docker-build", "client_payload": {"release_tag": "${{ github.event.release.tag_name }}"}}'